server {
    server_tokens off;
    listen       8090 ssl;
    listen  [::]:8090;
    server_name  localhost;

    # ssl on;
    ssl_certificate /etc/nginx/server.crt;     #配置证书位置
    ssl_certificate_key /etc/nginx/server.key.unsecure; #配置秘钥位置

    # ssl验证相关配置
    ssl_session_timeout  5m;    #缓存有效期
    # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

    # 启用 Forward Secrecy
    ssl_ecdh_curve secp384r1:prime256v1;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Content-Security-Policy "default-src 'self'";

    # 启用 OCSP Stapling 可以减少 SSL 握手时间，提高性能
    ssl_stapling on;
    ssl_stapling_verify on;


    client_body_buffer_size 10m;
    client_max_body_size 150m;
    client_body_temp_path /temp;

    proxy_buffer_size 512k;
    proxy_buffers   32 512k;
    proxy_busy_buffers_size 512k;
	
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
	

    # location / {
    #     root   /usr/share/nginx/html/plastic;
    #     index  index.html index.htm;
    # }
	
    # 7804 转发到 12 上 8089 端口
    location / {
        proxy_pass  https://172.25.138.18:9005;
	proxy_cookie_path / /;
	# proxy_cookie_path /plastic /;
	proxy_pass_header X-Accel-Redirect;
       	proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

	# proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 限制机器人访问
	if ($http_user_agent ~* "BadBot") {
		return 403;
	}

	# 限制恶意请求
	if ($request_method !~ ^(GET|POST|HEAD)$) {
		return 405;
	}
	proxy_pass  https://172.25.138.18:9004;
	proxy_cookie_path / /;
	proxy_pass_header X-Accel-Redirect;
	proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

	# proxy_set_header Host $proxy_host; # 修改转发请求头，让8080端口的应用可以受到真实的请求
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

