server {
    listen 9999 ssl;
    listen [::]:9999;
    server_name _;

    ssl_certificate /etc/nginx/ssl/server.cer; # 证书位置
    ssl_certificate_key /etc/nginx/ssl/server.key; # 密钥位置
    ssl_password_file /etc/nginx/ssl/server.pass; # 密码位置

    ssl_session_timeout 5m; # ssl验证
    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; # 加密算法
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'; # 加密算法
    ssl_protocols TLSv1.2 TLSv1.3; # tls协议版本
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # tls协议版本
    ssl_prefer_server_ciphers on; # 使用服务端首选算法

    # 启用 OCSP Stapling 可以减少 SSL 握手时间，提高性能
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/chain.cer;
    resolver 192.168.58.110 valid=1200s;

    #access_log /var/log/nginx/access.host80.log  main;
    access_log /dev/stdout  main;
    #error_log /var/log/nginx/error.host80.log error;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'";
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:";

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: default-src 'self' https: http: data: blob: 'unsafe-inline'" always;

    charset utf-8;
    gzip on;
    gzip_buffers 32 4K;
    gzip_comp_level 6;
    gzip_min_length 100;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;

    client_body_buffer_size 1024m;
    client_max_body_size 1024m;
    client_body_temp_path /temp;

    proxy_buffer_size 512k;
    proxy_buffers   32 512k;
    proxy_busy_buffers_size 512k;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;

    # 连接超时设置
    keepalive_timeout 65;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;
    proxy_connect_timeout 60;
    proxy_send_timeout 60;
    proxy_read_timeout 60;

    #access_log /var/log/nginx/access.host9999.log  main;
    access_log /dev/stdout  main;
    #error_log /var/log/nginx/error.host9999.log error;

    location /private-computing/ {
        proxy_pass  https://192.168.58.110:9988/private-computing/;
        proxy_cookie_path / /;
        proxy_pass_header X-Accel-Redirect;
        proxy_read_timeout 150;
        proxy_connect_timeout 150;
        proxy_send_timeout 150;
    }


    location /pricomp-visual/ {
        proxy_pass  https://192.168.58.110:9989/pricomp-visual/;
        proxy_cookie_path / /;
        proxy_pass_header X-Accel-Redirect;
        proxy_read_timeout 150;
        proxy_connect_timeout 150;
        proxy_send_timeout 150;
    }


    location /prompt {
        alias /usr/share/nginx/html/prompt;
        index index.html index.htm;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        autoindex on;
    }

    # 禁止特定请求方法
    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
        return 444;
    }

    # 客户端缓存控制
    location /assets {
        expires 7d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
    }

    location / {
        root   /usr/share/nginx/html/port9999;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    error_page  404              /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

}
